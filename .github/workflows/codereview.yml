name: 'Code Review'
on:
  workflow_dispatch:

permissions:
  contents: write

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:

# KICS IAC scan
  check-iac:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:

# Checkout
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: ${{ github.repository }}
        
    - name: run kics Scan
      uses: checkmarx/kics-github-action@v1.6
      with:
        path: terraform/main.tf,Dockerfile
        output_formats: json
        output_path: myResults/
        
    - name: Archive KICS results
      uses: actions/upload-artifact@v3
      with:
        name: kics-report
        path:  myResults/results.json
        if-no-files-found: ignore

# secret discovery trufflehog        
  check-secrets:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with: 
          fetch-depth: 0
      
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        id: get_secret_scan
        with:
          base: ${{ github.event.repository.default_branch }}
          path: ./
          head: HEAD
          extra_args: --debug --only-verified --json 
      
      - name: Insight of results
        run: |
          echo ${{ steps.get_secret_scan.outputs.* }} > trufflehogresults.txt
      
      - name: Archive Trufflehog results
        uses: actions/upload-artifact@v3
        with:
          name: trufflehog-report
          path: trufflehogresults.json
          if-no-files-found: ignore

#secret discovery
  gitleaks-scan:
      name: gitleaks
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 3
        - uses: gitleaks/gitleaks-action@v2
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
#SCA Vulnerabilty scaneer OSV scanner       
  osv-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Go environment
        uses: actions/setup-go@v3.5.0
      
      - name: check go version
        id: osvscan
        run: |
          go install github.com/google/osv-scanner/cmd/osv-scanner@v1
          export PATH=${PATH}:`go env GOPATH`/bin
          echo $(osv-scanner --json -r .) > osvscan.json 
      
      - name: Archive osv results
        uses: actions/upload-artifact@v3
        with:
          name: osv-scan
          path: osvscan.json
          if-no-files-found: ignore
          
      - name: summary
        run: |
          echo -e $(cat osvscan.json) >> $GITHUB_STEP_SUMMARY

